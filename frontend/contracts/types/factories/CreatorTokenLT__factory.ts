/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CreatorTokenLT,
  CreatorTokenLTInterface,
} from "../CreatorTokenLT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ctoken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_of",
        type: "address",
      },
    ],
    name: "tokensBurnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ctoken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "tokensMinted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burnMyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_basetoken",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c8438038062001c848339810160408190526200003491620001fb565b8151829082906200004d906003906020850190620000a2565b50805162000063906004906020840190620000a2565b505060058054336001600160a01b031991821617909155600780549091166001600160a01b0395909516949094179093555050600160065550620002d4565b828054620000b09062000281565b90600052602060002090601f016020900481019282620000d457600085556200011f565b82601f10620000ef57805160ff19168380011785556200011f565b828001600101855582156200011f579182015b828111156200011f57825182559160200191906001019062000102565b506200012d92915062000131565b5090565b5b808211156200012d576000815560010162000132565b600082601f83011262000159578081fd5b81516001600160401b0380821115620001765762000176620002be565b604051601f8301601f19908116603f01168101908282118183101715620001a157620001a1620002be565b81604052838152602092508683858801011115620001bd578485fd5b8491505b83821015620001e05785820183015181830184015290820190620001c1565b83821115620001f157848385830101525b9695505050505050565b60008060006060848603121562000210578283fd5b83516001600160a01b038116811462000227578384fd5b60208501519093506001600160401b038082111562000244578384fd5b620002528783880162000148565b9350604086015191508082111562000268578283fd5b50620002778682870162000148565b9150509250925092565b600181811c908216806200029657607f821691505b60208210811415620002b857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6119a080620002e46000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c806302d05d3f146100e057806306fdde0314610109578063095ea7b31461011e57806318160ddd1461014157806323b872dd14610153578063313ce5671461016657806339509351146101755780634162169f146101885780636764765d1461019b57806370a08231146101b057806395d89b41146101d9578063a457c2d7146101e1578063a9059cbb146101f4578063c4d66de814610207578063c625e9b11461021a578063dd62ed3e1461022d578063f0dda65c14610266575b600080fd5b6007546100f3906001600160a01b031681565b604051610100919061176a565b60405180910390f35b610111610279565b60405161010091906117c5565b61013161012c36600461160c565b61030b565b6040519015158152602001610100565b6002545b604051908152602001610100565b6101316101613660046115cc565b610322565b60405160128152602001610100565b61013161018336600461160c565b6103d1565b6008546100f3906001600160a01b031681565b6101ae6101a9366004611716565b61040d565b005b6101456101be36600461155c565b6001600160a01b031660009081526020819052604090205490565b6101116104a5565b6101316101ef36600461160c565b6104b4565b61013161020236600461160c565b61054d565b6101ae61021536600461155c565b61055a565b6101ae610228366004611746565b61063e565b61014561023b366004611594565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101ae61027436600461160c565b610eed565b606060038054610288906118cb565b80601f01602080910402602001604051908101604052809291908181526020018280546102b4906118cb565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b5050505050905090565b6000610318338484610f9c565b5060015b92915050565b600061032f8484846110c1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103b95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103c68533858403610f9c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161031891859061040890869061185d565b610f9c565b6006546001146104535760405162461bcd60e51b815260206004820152601160248201527016195b191bdc98591bce881313d0d2d151607a1b60448201526064016103b0565b6000600655610462338261127e565b7fc72d991da04c50c6faedc5b433a9ea6c6ec3b1810db2d1e2c728b80f82a2b0fd308233604051610495939291906117a2565b60405180910390a1506001600655565b606060048054610288906118cb565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b0565b6105433385858403610f9c565b5060019392505050565b60006103183384846110c1565b6005546001600160a01b031633146105c45760405162461bcd60e51b815260206004820152602760248201527f58656c646f7261646f3a206f6e6c792063726561746f7220666163746f727920604482015266185b1b1bddd95960ca1b60648201526084016103b0565b6008546001600160a01b03161561061c5760405162461bcd60e51b815260206004820152601c60248201527b16195b191bdc98591bce88111053c8185b1c9958591e48185919195960221b60448201526064016103b0565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663a25eb5d96040518163ffffffff1660e01b815260040160206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190611578565b6001600160a01b03166370a08231336040518263ffffffff1660e01b81526004016106f2919061176a565b60206040518083038186803b15801561070a57600080fd5b505afa15801561071e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610742919061172e565b600560009054906101000a90046001600160a01b03166001600160a01b0316637678bfae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561079057600080fd5b505afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c8919061172e565b1161085657600560009054906101000a90046001600160a01b03166001600160a01b0316636b6f4a9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561081b57600080fd5b505afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610853919061172e565b91505b600560009054906101000a90046001600160a01b03166001600160a01b031663df4e9b956040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a457600080fd5b505afa1580156108b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190611578565b6001600160a01b0316836001600160a01b031614156109c057600554600754604051633369fdb560e21b81526109b9926001600160a01b039081169263cda7f6d49261092e929091169060040161176a565b60006040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109829190810190611637565b6000815181106109a257634e487b7160e01b600052603260045260246000fd5b6020026020010151856113b290919063ffffffff16565b9050610bf4565b600560009054906101000a90046001600160a01b03166001600160a01b0316633e413bee6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0e57600080fd5b505afa158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a469190611578565b6001600160a01b0316836001600160a01b03161480610afb5750600560009054906101000a90046001600160a01b03166001600160a01b031663f4b9fa756040518163ffffffff1660e01b815260040160206040518083038186803b158015610aae57600080fd5b505afa158015610ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae69190611578565b6001600160a01b0316836001600160a01b0316145b15610bad57600554600754604051633369fdb560e21b81526109b9926001600160a01b039081169263cda7f6d492610b39929091169060040161176a565b60006040518083038186803b158015610b5157600080fd5b505afa158015610b65573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b8d9190810190611637565b6001815181106109a257634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152601c60248201527b2c32b63237b930b2379d1034b73b3630b4b2103130b9b2ba37b5b2b760211b60448201526064016103b0565b6000610c8f82610c8a85600560009054906101000a90046001600160a01b03166001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4c57600080fd5b505afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c84919061172e565b90611419565b61146f565b6008549091506001600160a01b03808616916323b872dd91339116610cb48686611419565b6040518463ffffffff1660e01b8152600401610cd29392919061177e565b602060405180830381600087803b158015610cec57600080fd5b505af1158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906116f6565b610d405760405162461bcd60e51b81526004016103b090611818565b836001600160a01b03166323b872dd33600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015610d9e57600080fd5b505afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd69190611578565b846040518463ffffffff1660e01b8152600401610df59392919061177e565b602060405180830381600087803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4791906116f6565b610e635760405162461bcd60e51b81526004016103b090611818565b610e7e33610e7987670de0b6b3a76400006113b2565b61148f565b600860009054906101000a90046001600160a01b03166001600160a01b031663af04c0c96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ece57600080fd5b505af1158015610ee2573d6000803e3d6000fd5b505050505050505050565b6008546001600160a01b03163314610f535760405162461bcd60e51b815260206004820152602360248201527f58656c646f7261646f3a206f6e6c792064616f2063616e206d696e7420746f6b604482015262656e7360e81b60648201526084016103b0565b610f5d828261148f565b7f73f1290e6ba3ca3d26393a68adc04ff6237c3856cf7e180ccd18f14acd67ef62308284604051610f90939291906117a2565b60405180910390a15050565b6001600160a01b038316610ffe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b0565b6001600160a01b03821661105f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166111255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b0565b6001600160a01b0382166111875760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b0565b6001600160a01b038316600090815260208190526040902054818110156111ff5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b0565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061123690849061185d565b92505081905550826001600160a01b0316846001600160a01b031660008051602061194b8339815191528460405161127091815260200190565b60405180910390a350505050565b6001600160a01b0382166112de5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103b0565b6001600160a01b038216600090815260208190526040902054818110156113525760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103b0565b6001600160a01b03831660009081526020819052604081208383039055600280548492906113819084906118b4565b90915550506040518281526000906001600160a01b0385169060008051602061194b833981519152906020016110b4565b60008115806113d6575082826113c88183611895565b92506113d49083611875565b145b61031c5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b60448201526064016103b0565b60008261142683826118b4565b915081111561031c5760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b60448201526064016103b0565b600061271061147e84846113b2565b6114889190611875565b9392505050565b6001600160a01b0382166114e55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b0565b80600260008282546114f7919061185d565b90915550506001600160a01b0382166000908152602081905260408120805483929061152490849061185d565b90915550506040518181526001600160a01b0383169060009060008051602061194b8339815191529060200160405180910390a35050565b60006020828403121561156d578081fd5b813561148881611932565b600060208284031215611589578081fd5b815161148881611932565b600080604083850312156115a6578081fd5b82356115b181611932565b915060208301356115c181611932565b809150509250929050565b6000806000606084860312156115e0578081fd5b83356115eb81611932565b925060208401356115fb81611932565b929592945050506040919091013590565b6000806040838503121561161e578182fd5b823561162981611932565b946020939093013593505050565b60006020808385031215611649578182fd5b82516001600160401b038082111561165f578384fd5b818501915085601f830112611672578384fd5b8151818111156116845761168461191c565b8060051b604051601f19603f830116810181811085821117156116a9576116a961191c565b604052828152858101935084860182860187018a10156116c7578788fd5b8795505b838610156116e95780518552600195909501949386019386016116cb565b5098975050505050505050565b600060208284031215611707578081fd5b81518015158114611488578182fd5b600060208284031215611727578081fd5b5035919050565b60006020828403121561173f578081fd5b5051919050565b60008060408385031215611758578182fd5b8235915060208301356115c181611932565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6000602080835283518082850152825b818110156117f1578581018301518582016040015282016117d5565b818111156118025783604083870101525b50601f01601f1916929092016040019392505050565b60208082526025908201527f58656c646f7261646f3a206261736520746f6b656e207472616e736665722066604082015264185a5b195960da1b606082015260800190565b6000821982111561187057611870611906565b500190565b60008261189057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118af576118af611906565b500290565b6000828210156118c6576118c6611906565b500390565b600181811c908216806118df57607f821691505b6020821081141561190057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461194757600080fd5b5056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122014f66d8acbc49c971ef2f6eebb657a7460065c9f74ba393583ec520f01ddbb0864736f6c63430008040033";

type CreatorTokenLTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreatorTokenLTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreatorTokenLT__factory extends ContractFactory {
  constructor(...args: CreatorTokenLTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _creator: string,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CreatorTokenLT> {
    return super.deploy(
      _creator,
      name,
      symbol,
      overrides || {}
    ) as Promise<CreatorTokenLT>;
  }
  getDeployTransaction(
    _creator: string,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_creator, name, symbol, overrides || {});
  }
  attach(address: string): CreatorTokenLT {
    return super.attach(address) as CreatorTokenLT;
  }
  connect(signer: Signer): CreatorTokenLT__factory {
    return super.connect(signer) as CreatorTokenLT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreatorTokenLTInterface {
    return new utils.Interface(_abi) as CreatorTokenLTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreatorTokenLT {
    return new Contract(address, _abi, signerOrProvider) as CreatorTokenLT;
  }
}
